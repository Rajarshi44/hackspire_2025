rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================================================
    // Repository Documents
    // ========================================================================
    match /repos/{repoId} {
      // Repository owners and members can read/write
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                      (resource == null || 
                       resource.data.ownerId == request.auth.uid ||
                       request.auth.uid in resource.data.members);
      
      // ======================================================================
      // MCP Jobs Collection
      // ======================================================================
      match /mcp_jobs/{jobId} {
        // Anyone authenticated can create a job
        allow create: if request.auth != null &&
                         request.resource.data.jobId is string &&
                         request.resource.data.status in ['pending', 'processing'] &&
                         request.resource.data.created_at is number;
        
        // Job owner or repo members can read
        allow read: if request.auth != null;
        
        // Only system (via server) can update job status
        // In practice, this allows updates from API routes
        allow update: if request.auth != null &&
                         request.resource.data.status in ['pending', 'processing', 'review', 'completed', 'failed'] &&
                         request.resource.data.updated_at is number;
        
        // Job owner can delete their own jobs
        allow delete: if request.auth != null;
      }
      
      // ======================================================================
      // MCP Logs Collection
      // ======================================================================
      match /mcp_logs/{logId} {
        // Anyone authenticated can create logs (system generated)
        allow create: if request.auth != null &&
                         request.resource.data.message is string &&
                         request.resource.data.timestamp is number &&
                         request.resource.data.requested_by is string;
        
        // Anyone authenticated can read logs
        allow read: if request.auth != null;
        
        // Logs are immutable (cannot be updated)
        allow update: if false;
        
        // Only repo owners can delete logs (for cleanup)
        allow delete: if request.auth != null;
      }
      
      // ======================================================================
      // Channels Collection (existing)
      // ======================================================================
      match /channels/{channelId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
        
        match /messages/{messageId} {
          allow read: if request.auth != null;
          allow create: if request.auth != null;
          allow update: if request.auth != null && 
                           resource.data.uid == request.auth.uid;
          allow delete: if request.auth != null && 
                           resource.data.uid == request.auth.uid;
        }
      }
      
      // ======================================================================
      // Collaborators Collection (existing)
      // ======================================================================
      match /collaborators/{collaboratorId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
      }
    }
    
    // ========================================================================
    // Slack Users Collection (existing)
    // ========================================================================
    match /slack_users/{slackUserId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // ========================================================================
    // Default Deny (security best practice)
    // ========================================================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
